"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/DonutsList",{

/***/ "./src/api/apiFetch.js":
/*!*****************************!*\
  !*** ./src/api/apiFetch.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createDonut: function() { return /* binding */ createDonut; },\n/* harmony export */   deleteDonutById: function() { return /* binding */ deleteDonutById; },\n/* harmony export */   getAllDonuts: function() { return /* binding */ getAllDonuts; },\n/* harmony export */   getDonutById: function() { return /* binding */ getDonutById; },\n/* harmony export */   updateDonut: function() { return /* binding */ updateDonut; }\n/* harmony export */ });\nconst getAllDonuts = async ()=>{\n    const response = await fetch(\"https://donuts-manager-backend.onrender.com/donuts/\");\n    const donuts = await response.json();\n    return donuts;\n};\nconst getDonutById = async (id)=>{\n    const response = await fetch(\"https://donuts-manager-backend.onrender.com/donuts/\" + id);\n    const donut = await response.json();\n    return donut;\n};\nconst createDonut = async (bodyParam)=>{\n    try {\n        console.log(bodyParam);\n        const response = await fetch(\"https://donuts-manager-backend.onrender.com/donuts/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: bodyParam\n        });\n        const newDonut = await response.json();\n        return newDonut;\n    } catch (error) {\n        console.error(\"Error creating donut:\", error);\n        throw error;\n    }\n};\nconst deleteDonutById = async (id)=>{\n    try {\n        const response = await fetch(\"https://donuts-manager-backend.onrender.com/donuts/\".concat(id), {\n            method: \"DELETE\"\n        });\n        if (!response.ok) {\n            throw new Error(\"HTTP error! status: \".concat(response.status));\n        }\n        const result = await response.json();\n        console.log(\"Donut deleted successfully\");\n        return result;\n    } catch (error) {\n        console.error(\"Error deleting donut:\", error);\n        throw error;\n    }\n};\nconst updateDonut = async (id, bodyParam)=>{\n    try {\n        const response = await fetch(\"https://donuts-manager-backend.onrender.com/donuts/\" + id, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: bodyParam\n        });\n        const updatedDonut = await response.json();\n        return updatedDonut;\n    } catch (error) {\n        console.error(\"Error updating donut:\", error);\n        throw error;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYXBpL2FwaUZldGNoLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQU8sTUFBTUEsZUFBZTtJQUMxQixNQUFNQyxXQUFXLE1BQU1DLE1BQU07SUFDN0IsTUFBTUMsU0FBUyxNQUFNRixTQUFTRyxJQUFJO0lBQ2xDLE9BQU9EO0FBQ1QsRUFBRTtBQUVLLE1BQU1FLGVBQWUsT0FBT0M7SUFDakMsTUFBTUwsV0FBVyxNQUFNQyxNQUFNLHdEQUFzREk7SUFDbkYsTUFBTUMsUUFBUSxNQUFNTixTQUFTRyxJQUFJO0lBQ2pDLE9BQU9HO0FBQ1QsRUFBQztBQUVNLE1BQU1DLGNBQWMsT0FBTUM7SUFDL0IsSUFBRztRQUNEQyxRQUFRQyxHQUFHLENBQUNGO1FBQ1osTUFBTVIsV0FBVyxNQUFNQyxNQUFNLHVEQUF1RDtZQUNsRlUsUUFBUTtZQUNSQyxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtZQUM5Q0MsTUFBTUw7UUFDUjtRQUNBLE1BQU1NLFdBQVcsTUFBTWQsU0FBU0csSUFBSTtRQUNwQyxPQUFPVztJQUVULEVBQUUsT0FBT0MsT0FBTTtRQUNiTixRQUFRTSxLQUFLLENBQUMseUJBQXlCQTtRQUN2QyxNQUFNQTtJQUNSO0FBQ0YsRUFBQztBQUVNLE1BQU1DLGtCQUFrQixPQUFPWDtJQUNwQyxJQUFJO1FBQ0YsTUFBTUwsV0FBVyxNQUFNQyxNQUFNLHNEQUF5RCxPQUFISSxLQUFNO1lBQ3ZGTSxRQUFRO1FBQ1Y7UUFDQSxJQUFJLENBQUNYLFNBQVNpQixFQUFFLEVBQUU7WUFDaEIsTUFBTSxJQUFJQyxNQUFNLHVCQUF1QyxPQUFoQmxCLFNBQVNtQixNQUFNO1FBQ3hEO1FBQ0EsTUFBTUMsU0FBUyxNQUFNcEIsU0FBU0csSUFBSTtRQUNsQ00sUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBT1U7SUFFVCxFQUFFLE9BQU9MLE9BQU87UUFDZE4sUUFBUU0sS0FBSyxDQUFDLHlCQUF5QkE7UUFDdkMsTUFBTUE7SUFDUjtBQUNGLEVBQUU7QUFFSyxNQUFNTSxjQUFjLE9BQU9oQixJQUFJRztJQUNwQyxJQUFHO1FBQ0QsTUFBTVIsV0FBVyxNQUFNQyxNQUFNLHdEQUFzREksSUFBSTtZQUNyRk0sUUFBUTtZQUNSQyxTQUFTO2dCQUFFLGdCQUFnQjtZQUFtQjtZQUM5Q0MsTUFBTUw7UUFDUjtRQUVBLE1BQU1jLGVBQWUsTUFBTXRCLFNBQVNHLElBQUk7UUFDeEMsT0FBT21CO0lBRVQsRUFBRSxPQUFNUCxPQUFNO1FBQ1pOLFFBQVFNLEtBQUssQ0FBQyx5QkFBeUJBO1FBQ3ZDLE1BQU1BO0lBQ1I7QUFDRixFQUFFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcGkvYXBpRmV0Y2guanM/YzU3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZ2V0QWxsRG9udXRzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2RvbnV0cy1tYW5hZ2VyLWJhY2tlbmQub25yZW5kZXIuY29tL2RvbnV0cy8nKTtcbiAgY29uc3QgZG9udXRzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICByZXR1cm4gZG9udXRzO1xufTtcblxuZXhwb3J0IGNvbnN0IGdldERvbnV0QnlJZCA9IGFzeW5jIChpZCkgPT4ge1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2RvbnV0cy1tYW5hZ2VyLWJhY2tlbmQub25yZW5kZXIuY29tL2RvbnV0cy8nK2lkKTtcbiAgY29uc3QgZG9udXQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIHJldHVybiBkb251dDtcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZURvbnV0ID0gYXN5bmMoYm9keVBhcmFtKSA9PiB7XG4gIHRyeXtcbiAgICBjb25zb2xlLmxvZyhib2R5UGFyYW0pXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cHM6Ly9kb251dHMtbWFuYWdlci1iYWNrZW5kLm9ucmVuZGVyLmNvbS9kb251dHMvJywge1xuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIgfSxcbiAgICAgIGJvZHk6IGJvZHlQYXJhbVxuICAgIH0pO1xuICAgIGNvbnN0IG5ld0RvbnV0ID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xuICAgIHJldHVybiBuZXdEb251dFxuXG4gIH0gY2F0Y2ggKGVycm9yKXtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY3JlYXRpbmcgZG9udXQ6XCIsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgZGVsZXRlRG9udXRCeUlkID0gYXN5bmMgKGlkKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9kb251dHMtbWFuYWdlci1iYWNrZW5kLm9ucmVuZGVyLmNvbS9kb251dHMvJHtpZH1gLCB7XG4gICAgICBtZXRob2Q6ICdERUxFVEUnXG4gICAgfSk7XG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBIVFRQIGVycm9yISBzdGF0dXM6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgIH1cbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc29sZS5sb2coXCJEb251dCBkZWxldGVkIHN1Y2Nlc3NmdWxseVwiKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGRlbGV0aW5nIGRvbnV0OlwiLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07XG5cbmV4cG9ydCBjb25zdCB1cGRhdGVEb251dCA9IGFzeW5jIChpZCwgYm9keVBhcmFtKSA9PiB7XG4gIHRyeXtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2RvbnV0cy1tYW5hZ2VyLWJhY2tlbmQub25yZW5kZXIuY29tL2RvbnV0cy8nK2lkLCB7XG4gICAgICBtZXRob2Q6ICdQVVQnLFxuICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgYm9keTogYm9keVBhcmFtXG4gICAgfSk7XG5cbiAgICBjb25zdCB1cGRhdGVkRG9udXQgPSBhd2FpdCByZXNwb25zZS5qc29uKCkgO1xuICAgIHJldHVybiB1cGRhdGVkRG9udXQ7XG5cbiAgfSBjYXRjaChlcnJvcil7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIHVwZGF0aW5nIGRvbnV0OlwiLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn07Il0sIm5hbWVzIjpbImdldEFsbERvbnV0cyIsInJlc3BvbnNlIiwiZmV0Y2giLCJkb251dHMiLCJqc29uIiwiZ2V0RG9udXRCeUlkIiwiaWQiLCJkb251dCIsImNyZWF0ZURvbnV0IiwiYm9keVBhcmFtIiwiY29uc29sZSIsImxvZyIsIm1ldGhvZCIsImhlYWRlcnMiLCJib2R5IiwibmV3RG9udXQiLCJlcnJvciIsImRlbGV0ZURvbnV0QnlJZCIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJyZXN1bHQiLCJ1cGRhdGVEb251dCIsInVwZGF0ZWREb251dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/api/apiFetch.js\n"));

/***/ })

});